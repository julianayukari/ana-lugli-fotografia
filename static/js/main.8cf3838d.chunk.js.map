{"version":3,"sources":["auth.js","services/githubUsers.js","pages/Portal/Home/components/UsersListItem/styles.js","pages/Portal/Home/components/UsersListItem/index.js","pages/Portal/Home/styles.js","pages/Portal/Home/index.js","services/login.js","pages/Portal/Login/components/LoginForm/styles.js","pages/Portal/Login/components/LoginForm/index.js","pages/Portal/Login/styles.js","pages/Portal/Login/index.js","services/register.js","pages/Portal/Register/components/RegisterForm/styles.js","pages/Portal/Register/components/RegisterForm/index.js","pages/Portal/Register/styles.js","pages/Portal/Register/index.js","pages/WebPage/styles.js","pages/WebPage/index.js","routes.js","store/ducks/users.js","store/ducks/index.js","store/index.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","api","axios","create","baseURL","Image","styled","img","Container","div","UserName","a","UsersListItem","user","src","avatar_url","href","html_url","target","login","Header","Title","h1","Body","Background","ErrorMessage","p","SearchContainer","Input","input","InputAndButtonContainer","Home","history","useHistory","useState","users","setUsers","inputValue","setInputValue","errorMessage","setErrorMessage","handleButtonPress","length","method","url","responseType","then","response","data","items","type","name","id","value","onChange","e","Button","style","marginLeft","onClick","map","index","margin","clear","push","FormContainer","LoginForm","alertType","setAlertType","show","setShow","schema","yup","email","required","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","console","log","post","token","setItem","catch","error","message","Form","handleSubmit","Group","controlId","Label","InputGroup","Prepend","Text","Control","placeholder","handleChange","isInvalid","errors","Feedback","display","flexDirection","justifyContent","paddingTop","paddingBottom","width","variant","Alert","dismissible","onClose","Heading","Register","RegisterForm","confirmPassword","oneOf","backgroundColor","borderWidth","WebPage","Routes","exact","path","Login","createActions","addUser","Types","INITIAL_STATE","Creators","createReducer","ADD_USER","state","action","Math","random","combineReducers","store","createStore","reducers","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8cf3838d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/Login\",\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.github.com/search\",\r\n});\r\n\r\nexport default api;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 10px 0 10px 0;\r\n`;\r\n\r\nexport const UserName = styled.a`\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Image, UserName } from \"./styles\";\r\n\r\nexport default function UsersListItem({ user }) {\r\n  return (\r\n    <Container>\r\n      <Image src={user.avatar_url} />\r\n      <UserName href={user.html_url} target=\"_blank\">\r\n        {user.login}\r\n      </UserName>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #24292e;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  align-items: center;\r\n  padding: 100px;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  background-color: #faf9f9;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: red;\r\n  font-weight: 200;\r\n  padding-top: 10px;\r\n`;\r\n\r\nexport const SearchContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 35px;\r\n`;\r\n\r\nexport const InputAndButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../../../services/githubUsers\";\r\nimport UsersListItem from \"./components/UsersListItem\";\r\nimport {\r\n  Background,\r\n  Body,\r\n  ErrorMessage,\r\n  Header,\r\n  Input,\r\n  InputAndButtonContainer,\r\n  SearchContainer,\r\n  Title,\r\n} from \"./styles\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n  const [users, setUsers] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  function searchUsers() {\r\n    api({\r\n      method: \"get\",\r\n      url: `/users?q=${inputValue}`,\r\n      responseType: \"json\",\r\n    }).then(function (response) {\r\n      setUsers(response.data.items);\r\n    });\r\n  }\r\n\r\n  function handleButtonPress() {\r\n    if (inputValue.length === 0) {\r\n      setErrorMessage(\"Digite pelo menos 3 caracteres para buscar!\");\r\n    } else if (inputValue.length < 3) {\r\n      setErrorMessage(\"Digite pelo menos 3 caracteres para buscar!\");\r\n    } else {\r\n      setErrorMessage(null);\r\n      searchUsers();\r\n    }\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  }\r\n  const user = localStorage.getItem(\"email\");\r\n\r\n  return (\r\n    <Background>\r\n      <Header>\r\n        <Title>Projeto 1 - Github Users </Title>\r\n      </Header>\r\n      <Body>\r\n        <h5>Hello {user} !</h5>\r\n        <SearchContainer>\r\n          <p>Digite o nome de algum usuário do GitHub:</p>\r\n          <InputAndButtonContainer>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              id=\"search\"\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginLeft: 10 }}\r\n              onClick={() => handleButtonPress()}\r\n            >\r\n              Buscar usuários\r\n            </Button>\r\n          </InputAndButtonContainer>\r\n          <ErrorMessage>{errorMessage}</ErrorMessage>\r\n        </SearchContainer>\r\n\r\n        {users.length > 0 && (\r\n          <ul>\r\n            {users.map((user, index) => (\r\n              <UsersListItem user={user} />\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </Body>\r\n      <Button type=\"primary\" style={{ margin: 30 }} onClick={() => logout()}>\r\n        sair\r\n      </Button>\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://reqres.in/api\",\r\n});\r\n\r\nexport default api;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.div`\r\n  padding: 100px;\r\n`;\r\n","import { useFormik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport api from \"../../../../../services/login\";\r\nimport { FormContainer } from \"./styles\";\r\n\r\nfunction LoginForm() {\r\n  const history = useHistory();\r\n\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const [alertType, setAlertType] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .required(\"Este campo é obrigatório\")\r\n      .email(\"Preencha um email válido!\"),\r\n    password: yup.string().required(\"Este campo é obrigatório\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: schema,\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      api\r\n        .post(\"/login\", {\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then(function (response) {\r\n          const token = response.data.token;\r\n          localStorage.setItem(\"token\", token);\r\n          localStorage.setItem(\"email\", values.email);\r\n          history.push(\"/Portal\");\r\n        })\r\n        .catch(function (error) {\r\n          setAlertType(\"danger\");\r\n          setShow(true);\r\n          setErrorMessage(error.message);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <FormContainer>\r\n          <div>\r\n            <Form.Group controlId=\"validationFormikEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"password\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange(\"email\")}\r\n                  isInvalid={!!formik.errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {formik.errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: 10,\r\n              paddingBottom: 30,\r\n            }}\r\n          >\r\n            <Form.Group\r\n              controlId=\"validationFormikPassword\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <Form.Label>Senha</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"password\"\r\n                placeholder=\"Senha\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange(\"password\")}\r\n                isInvalid={!!formik.errors.password}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formik.errors.password}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Button style={{ width: \"49%\" }} type=\"submit\">\r\n              Entrar\r\n            </Button>\r\n            <Button\r\n              style={{ width: \"49%\" }}\r\n              type=\"button\"\r\n              onClick={() => history.push(\"Cadastro\")}\r\n              variant=\"outline-primary\"\r\n            >\r\n              Cadastre-se\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </Form>\r\n      {show && (\r\n        <Alert\r\n          variant={alertType}\r\n          dismissible\r\n          show={show}\r\n          onClose={() => {\r\n            setShow(false);\r\n            setErrorMessage(null);\r\n          }}\r\n        >\r\n          <Alert.Heading>\r\n            {errorMessage !== null ? \"Erro\" : \"Sucesso\"}\r\n          </Alert.Heading>\r\n          {errorMessage !== null && \"Não foi possível concluir o login!\"}\r\n          {errorMessage !== null && (\r\n            <>\r\n              <hr />\r\n              {errorMessage !== null && errorMessage}\r\n            </>\r\n          )}\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #24292e;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  background-color: #faf9f9;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n","import React from \"react\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport { Background, Header, Title } from \"./styles\";\r\n\r\nexport default function Register() {\r\n  return (\r\n    <Background>\r\n      <Header>\r\n        <Title>Login</Title>\r\n      </Header>\r\n      <LoginForm />\r\n    </Background>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://reqres.in/api\",\r\n});\r\n\r\nexport default api;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.div`\r\n  padding: 100px;\r\n`;\r\n","import { useFormik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport api from \"../../../../../services/register\";\r\nimport { FormContainer } from \"./styles\";\r\n\r\nfunction RegisterForm() {\r\n  const history = useHistory();\r\n\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [alertType, setAlertType] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .required(\"Este campo é obrigatório\")\r\n      .email(\"Preencha um email válido!\"),\r\n    password: yup.string().required(\"Este campo é obrigatório\"),\r\n    confirmPassword: yup\r\n      .string()\r\n      .required(\"Este campo é obrigatório\")\r\n      .oneOf(\r\n        [yup.ref(\"password\"), null],\r\n        \"As senhas digitadas não são iguais!\"\r\n      ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      email: \"\",\r\n    },\r\n    validationSchema: schema,\r\n    onSubmit: async (values) => {\r\n      api\r\n        .post(\"/register\", {\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then(function (response) {\r\n          setAlertType(\"success\");\r\n          setShow(true);\r\n        })\r\n        .catch(function (error) {\r\n          setAlertType(\"danger\");\r\n          setShow(true);\r\n          setErrorMessage(error.message);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <FormContainer>\r\n          <div>\r\n            <Form.Group controlId=\"validationFormikEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"password\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange(\"email\")}\r\n                  isInvalid={!!formik.errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {formik.errors.email}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: 10,\r\n              paddingBottom: 30,\r\n            }}\r\n          >\r\n            <Form.Group\r\n              controlId=\"validationFormikPassword\"\r\n              style={{ width: \"49%\" }}\r\n            >\r\n              <Form.Label>Senha</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"password\"\r\n                placeholder=\"Senha\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange(\"password\")}\r\n                isInvalid={!!formik.errors.password}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {formik.errors.confirmPassword}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group\r\n              controlId=\"validationFormikConfirmPassword\"\r\n              style={{ width: \"49%\" }}\r\n            >\r\n              <Form.Label>Confirmar Senha</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Confirmar senha\"\r\n                name=\"confirmPassword\"\r\n                value={formik.values.confirmPassword}\r\n                onChange={formik.handleChange(\"confirmPassword\")}\r\n                isInvalid={!!formik.errors.confirmPassword}\r\n              />\r\n\r\n              <Form.Control.Feedback style={{ marginLeft: 10 }} type=\"invalid\">\r\n                {formik.errors.confirmPassword}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Button type=\"submit\" style={{ width: \"49%\" }}>\r\n              Finalizar cadastro\r\n            </Button>\r\n            <Button\r\n              style={{ backgroundColor: \"grey\", width: \"49%\", borderWidth: 0 }}\r\n              type=\"button\"\r\n              onClick={() => history.push(\"/Login\")}\r\n            >\r\n              Voltar ao Login\r\n            </Button>\r\n          </div>\r\n        </FormContainer>\r\n      </Form>\r\n      {show && (\r\n        <Alert\r\n          variant={alertType}\r\n          dismissible\r\n          show={show}\r\n          onClose={() => {\r\n            setShow(false);\r\n            setErrorMessage(null);\r\n          }}\r\n        >\r\n          <Alert.Heading>\r\n            {errorMessage !== null ? \"Erro\" : \"Sucesso\"}\r\n          </Alert.Heading>\r\n          {errorMessage !== null\r\n            ? \"Não foi possível concluir o cadastro!\"\r\n            : \"Usuário cadastrado no sistema!\"}\r\n          {errorMessage !== null && (\r\n            <>\r\n              <hr />\r\n              {errorMessage !== null && errorMessage}\r\n            </>\r\n          )}\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #24292e;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  background-color: #faf9f9;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n","import React from \"react\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport { Background, Header, Title } from \"./styles\";\r\n\r\nexport default function Register() {\r\n  return (\r\n    <Background>\r\n      <Header>\r\n        <Title>Cadastre-se! </Title>\r\n      </Header>\r\n      <RegisterForm />\r\n    </Background>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  padding: 50px;\r\n  font-size: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Title } from \"./styles\";\r\n\r\nfunction WebPage() {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <Title>Webpage ainda em desenvolvimento</Title>\r\n      <button onClick={() => history.push(\"/Portal\")}>Acessar Portal</button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default WebPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { PrivateRoute } from \"./auth\";\r\nimport Home from \"./pages/Portal/Home\";\r\nimport Login from \"./pages/Portal/Login\";\r\nimport Register from \"./pages/Portal/Register\";\r\nimport WebPage from \"./pages/WebPage\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={WebPage} />\r\n        <Route exact path=\"/Login\" component={Login} />\r\n        <Route exact path=\"/Cadastro\" component={Register} />\r\n        <PrivateRoute exact path=\"/Portal\" component={Home} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { createActions, createReducer } from \"reduxsauce\";\r\n\r\nexport const { Types, Creators } = createActions({\r\n  addUser: [\"email\", \"password\"],\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n  data: [\r\n    {\r\n      id: 0,\r\n      email: \"teste@email.com\",\r\n      password: 123,\r\n    },\r\n  ],\r\n};\r\n\r\nconst add = (state = INITIAL_STATE, action) => {\r\n  console.log(action);\r\n\r\n  return {\r\n    data: [\r\n      ...state.data,\r\n      {\r\n        id: Math.random(),\r\n        email: action.email,\r\n        password: action.password,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, {\r\n  [Types.ADD_USER]: add,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport users from \"./users\";\r\n\r\nexport default combineReducers({\r\n  users,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./ducks/index\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Routes from \"./routes\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Routes />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}